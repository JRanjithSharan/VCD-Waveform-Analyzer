$date
   Thu Sep 11 18:38:13 2025
$end

$version
  2025.1.0
  $dumpfile ("alu_8bit.vcd") 
$end

$timescale
  1ps
$end

$scope module alu_8bit_tb $end
$var reg 8 ! A [7:0] $end
$var reg 8 " B [7:0] $end
$var reg 4 # ALU_sel [3:0] $end
$var wire 8 $ ALU_result [7:0] $end
$scope module uut $end
$var wire 8 % A [7:0] $end
$var wire 8 & B [7:0] $end
$var wire 4 ' ALU_sel [3:0] $end
$var reg 8 ( ALU_result [7:0] $end
$upscope $end
$upscope $end
$enddefinitions $end

#0
$dumpvars
b0 !
b11111111 "
b0 #
b11111111 $
b0 %
b11111111 &
b0 '
b11111111 (
$end

#10000
b11010101 !
b1001110 "
b100011 $
b11010101 %
b1001110 &
b100011 (

#20000
b1 #
b10000111 $
b1 '
b10000111 (

#30000
b10 #
b11100110 $
b10 '
b11100110 (

#40000
b11 #
b10 $
b11 '
b10 (

#50000
b100 #
b1010100 $
b100 '
b1010100 (

#60000
b101 #
b110101 $
b101 '
b110101 (

#70000
b110 #
b10101011 $
b110 '
b10101011 (

#80000
b111 #
b11101010 $
b111 '
b11101010 (

#90000
b1000 #
b1000100 $
b1000 '
b1000100 (

#100000
b1001 #
b11011111 $
b1001 '
b11011111 (

#110000
b1010 #
b10011011 $
b1010 '
b10011011 (

#120000
b1011 #
b100000 $
b1011 '
b100000 (

#130000
b1100 #
b10111011 $
b1100 '
b10111011 (

#140000
b1101 #
b1100100 $
b1101 '
b1100100 (

#150000
b1110 #
b1 $
b1110 '
b1 (

#160000
b1111 #
b0 $
b1111 '
b0 (
